<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eshell on The Emacs Cat</title>
    <link>http://localhost:1313/tags/eshell/</link>
    <description>Recent content in Eshell on The Emacs Cat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Oct 2022 13:07:45 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/eshell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Clear the Eshell</title>
      <link>http://localhost:1313/post/how-to-clear-the-eshell/</link>
      <pubDate>Wed, 05 Oct 2022 13:07:45 +0300</pubDate>
      <guid>http://localhost:1313/post/how-to-clear-the-eshell/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a big fan of Eshell, but some things in Eshell look, hmm,&#xA;a bit strange. One of such things is how the Eshell&amp;rsquo;s command &lt;code&gt;clear&lt;/code&gt; clears&#xA;the screen.&lt;/p&gt;&#xA;&lt;p&gt;As it is decribed at the Unix Wiki page, &lt;em&gt;&lt;code&gt;clear&lt;/code&gt; is a computer operating&#xA;system command which is used to bring the command line on top of the&#xA;computer terminal.&lt;/em&gt; The key words are &amp;ldquo;bring the command line &lt;strong&gt;on top&lt;/strong&gt;&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;The Eshell&amp;rsquo;s &lt;code&gt;clear&lt;/code&gt; works in a different way, it brings the command&#xA;prompt &lt;strong&gt;on bottom&lt;/strong&gt;, instead.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/img/eshell-clear-1.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;Using the `clear` command to clear the Eshell screen.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/img/eshell-clear-2.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;After the `clear`, the command prompt has been moved on bottom.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Just recently, I&amp;rsquo;ve accidently discovered an unexpected, at least for me, workaround&#xA;(from this Stackexchange&#xA;&lt;a href=&#34;https://emacs.stackexchange.com/questions/12503/how-to-clear-the-eshell&#34;&gt;thread&lt;/a&gt;).&#xA;To clear the Eshell screen you just need to type &lt;code&gt;clear 1&lt;/code&gt; instead of&#xA;just &lt;code&gt;clear&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/img/eshell-clear1-1.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;Using the `clear 1` command to clear the Eshell screen.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/img/eshell-clear1-2.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;After the `clear 1`, it&amp;#39;s OK now.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Of course, then I&amp;rsquo;ve immediately added an alias for &lt;code&gt;clear 1&lt;/code&gt; to my&#xA;Eshell aliases configuration file &lt;code&gt;~/.emacs.d/eshell/alias&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;alias cls clear 1&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;More on Eshell aliases you can find&#xA;in my post &lt;a href=&#34;https://olddeuteronomy.github.io/post/eshell-aliases-and-prompt/&#34;&gt;Eshell Aliases, Prompt, And Colors&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Perhaps you can use this trick for your eshelling.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Eshell Aliases, Prompt, And Colors</title>
      <link>http://localhost:1313/post/eshell-aliases-and-prompt/</link>
      <pubDate>Fri, 22 Jul 2022 13:57:32 +0300</pubDate>
      <guid>http://localhost:1313/post/eshell-aliases-and-prompt/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Do you use #Emacs to run shells or terminal emulators?&#xA;Well, you should. With vterm you have a fast alternative to the&#xA;builtin ansi-term. And if you prefer shells, you&amp;rsquo;ve got EShell and&#xA;Shell Mode.&#xA;And don&amp;rsquo;t forget serial-term for embedded programming.&#xA;— Mickey Petersen (@mickeynp) on Twitter, July 18, 2022.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;eshell-aliases&#34;&gt;Eshell Aliases&lt;/h2&gt;&#xA;&lt;p&gt;An excellent&#xA;&lt;a href=&#34;https://www.masteringemacs.org/article/running-shells-in-emacs-overview&#34;&gt;post&lt;/a&gt;&#xA;from Mickey Petersen, a famous Emacs guru and the author of&#xA;&lt;a href=&#34;https://www.masteringemacs.org/&#34;&gt;&lt;em&gt;Mastering Emacs&lt;/em&gt;&lt;/a&gt; reminded me to&#xA;share my eshell configuration.&lt;/p&gt;&#xA;&lt;p&gt;There are 2 ways to configure eshell aliases. &lt;a href=&#34;http://www.gonsie.com/blorg/eshell.html&#34;&gt;Elsa&#xA;Gonsiorowski&lt;/a&gt; uses a&#xA;special configuration file &lt;code&gt;~/.emacs.d/eshell/alias&lt;/code&gt; while &lt;a href=&#34;https://github.com/howardabrams/dot-files/blob/master/emacs-eshell.org#aliases&#34;&gt;Howard&#xA;Abrams&lt;/a&gt;&#xA;prefers to put his eshell alias settings to &lt;code&gt;.emacs&lt;/code&gt; or &lt;code&gt;init.el&lt;/code&gt;.&#xA;Personally, I prefer the former approach.&lt;/p&gt;&#xA;&lt;p&gt;Here is my &lt;code&gt;~/.emacs.d/eshell/alias&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;alias ll ls -AFGhl --color=always $1&#xA;alias ff find-file $1&#xA;alias e find-file-other-window $1&#xA;alias d dired $1&#xA;alias gd magit-diff-unstaged&#xA;alias gds magit-diff-staged&#xA;alias gg git log --color --graph --oneline --abbrev-commit --decorate --all --date=short --pretty=format:&amp;#34;%C(cyan)%h %C(yellow)%ad %C(bold green)%d %C(reset)%s&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Most of these aliases are obvious, e.g. &lt;code&gt;ll&lt;/code&gt; prints extended directory&#xA;listing, &lt;code&gt;ff somefile&lt;/code&gt; opens &lt;em&gt;somefile&lt;/em&gt; for editing in the same&#xA;window, &lt;code&gt;e somefile&lt;/code&gt; uses other window to edit &lt;em&gt;somefile&lt;/em&gt;, &lt;code&gt;d&lt;/code&gt; opens&#xA;the dired buffer in the same window, etc. The last one prints&#xA;the colorized one-line git log as shown below.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/img/gg2.png&#34;/&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;eshell-prompt&#34;&gt;Eshell Prompt&lt;/h2&gt;&#xA;&lt;p&gt;The prompt you can see on the screenshot above is borrowed from the&#xA;Reddit&#xA;&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/6f0rkz/my_fancy_eshell_prompt/&#34;&gt;post&lt;/a&gt;&#xA;with some colors optimized for the Solarized Dark theme.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(setq eshell-prompt-function&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (lambda ()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;┌─[&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;user-login-name&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#dc322f&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;system-name&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#268bd2&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]──[&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;format-time-string&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%H:%M&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;current-time&lt;/span&gt;)) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#b58900&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]──[&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt; (eshell/pwd)) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#93a1a1&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;└─&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (if venv-current-name (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (&amp;#34;&lt;/span&gt; venv-current-name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;)  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#00dc00&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (if (&lt;span style=&#34;color:#a6e22e&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;user-uid&lt;/span&gt;) &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; # &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; $ &amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         )))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In addition to the username, the current time, and the current&#xA;directory it also shows the current Python virtual environment name&#xA;(in green).&lt;/p&gt;&#xA;&lt;h2 id=&#34;eshell-colors&#34;&gt;Eshell Colors&lt;/h2&gt;&#xA;&lt;p&gt;The often cited issue with eshell is the lack of color output even if&#xA;it is explicitly specified in a command (e.g. &lt;code&gt;ls --color=always&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Adding this to your &lt;code&gt;~/.emacs&lt;/code&gt; (or &lt;code&gt;init.el&lt;/code&gt;)  DOES NOT solve the problem:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(setenv &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TERM&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xterm-256color&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;THIS DOES solve the problem with color output in eshell:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eshell-mode-hook&lt;/span&gt; (lambda () (setenv &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TERM&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xterm-256color&amp;#34;&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Though to get the current directory listing in eshell I prefer to use the eshell&#xA;alias &lt;code&gt;d&lt;/code&gt; (equivalent to &lt;code&gt;d .&lt;/code&gt;), see the list of aliases above.&lt;/p&gt;&#xA;&lt;p&gt;More on Emacs&amp;rsquo; eshell can be found&#xA;&lt;a href=&#34;https://www.masteringemacs.org/article/complete-guide-mastering-eshell&#34;&gt;here&lt;/a&gt;,&#xA;thanks again, Mickey.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
