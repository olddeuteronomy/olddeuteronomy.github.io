<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2022 on The Emacs Cat</title>
    <link>https://olddeuteronomy.github.io/categories/2022/</link>
    <description>Recent content in 2022 on The Emacs Cat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Dec 2022 14:14:13 +0300</lastBuildDate>
    <atom:link href="https://olddeuteronomy.github.io/categories/2022/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Simple tree-sitter Config That Works</title>
      <link>https://olddeuteronomy.github.io/post/a-tree-sitter-config-that-works/</link>
      <pubDate>Mon, 05 Dec 2022 14:14:13 +0300</pubDate>
      <guid>https://olddeuteronomy.github.io/post/a-tree-sitter-config-that-works/</guid>
      <description>&lt;p&gt;Recently, I&amp;rsquo;ve discovered a number of posts on Reddit — like&#xA;&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/zc70m8/treesitterhlmode_does_not_do_anything/&#34;&gt;tree-sitter-hl-mode does not do&#xA;anything&lt;/a&gt;&#xA;or &lt;a href=&#34;https://www.reddit.com/r/emacs/comments/zbpa42/how_to_use_emacs_29_treesitter/&#34;&gt;How to use Emacs 29&#xA;Tree-sitter?&lt;/a&gt;&#xA;— and decided to share my simple &lt;code&gt;tree-sitter&lt;/code&gt; setup that&#xA;seems to be working on my Emacs 28.2 like a charm.&lt;/p&gt;&#xA;&lt;h2 id=&#34;step-1-os-installing-the--tree-sitter-app&#34;&gt;Step 1. OS: Installing the  &lt;code&gt;tree-sitter&lt;/code&gt; app&lt;/h2&gt;&#xA;&lt;p&gt;First of all, I&amp;rsquo;ve downloaded the latest pre-build binary archive for my&#xA;system from this &lt;a href=&#34;https://github.com/tree-sitter/tree-sitter/releases/tag/v0.20.7&#34;&gt;GitHub&#xA;repo&lt;/a&gt;,&#xA;in my case that is &lt;em&gt;tree-sitter-linux-x64.gz&lt;/em&gt; because I&amp;rsquo;m on Pop!_OS&#xA;20.10. Then I&amp;rsquo;ve unpack the archive, put the standalone binary in my&#xA;&lt;code&gt;$HOME/bin&lt;/code&gt; that is in my &lt;code&gt;$PATH&lt;/code&gt; and therefore is accessible from&#xA;anywhere, and changed its mode to &lt;em&gt;executable&lt;/em&gt; by &lt;code&gt;chmod +x tree-sitter&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/tree-sitter-bin.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;The latest tree-sitter app is installed.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;step-2-emacs&#34;&gt;Step 2. Emacs&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-21-emacs-installing-tree-sitter-packages&#34;&gt;Step 2.1. Emacs: Installing &lt;code&gt;tree-sitter&lt;/code&gt; packages&lt;/h3&gt;&#xA;&lt;p&gt;Then I&amp;rsquo;ve installed &lt;code&gt;tree-sitter&lt;/code&gt; (the parsing system) and &lt;code&gt;tree-sitter-langs&lt;/code&gt;&#xA;(the grammar bundle) Emacs packages using &lt;code&gt;package-list-packages&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/tree-sitter-packages.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;The tree-sitter packages are installed.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h3 id=&#34;step-22-emacs-configuring-tree-sitter&#34;&gt;Step 2.2. Emacs: Configuring &lt;code&gt;tree-sitter&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve added the following lines to my &lt;code&gt;~/.emacs&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;;;; `TREE-SITTER&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; 2022-12-04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tree-sitter&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tree-sitter-langs&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(global-tree-sitter-mode)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;tree-sitter-hl-mode)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s it. Quite simple, isn&amp;rsquo;t it?&lt;/p&gt;&#xA;&lt;p&gt;Please pay attention to the last line. It seems that the &lt;em&gt;tree-sitter&#xA;highlighting mode&lt;/em&gt; provided by &lt;code&gt;tree-sitter-hl-mode&lt;/code&gt; is not activated when&#xA;you load a file into the buffer even if the &lt;em&gt;global tree sitter mode&lt;/em&gt; is on.&#xA;Adding the hook for the particular source code mode solves this problem.&lt;/p&gt;&#xA;&lt;h2 id=&#34;result&#34;&gt;Result&lt;/h2&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/tree-sitter-python.png&#34;/&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Now I have a pretty looking Python code.&lt;/p&gt;&#xA;&lt;p&gt;More on &lt;code&gt;tree-sitter&lt;/code&gt; and its internals can be found at &lt;a href=&#34;https://tree-sitter.github.io/tree-sitter/&#34;&gt;https://tree-sitter.github.io/tree-sitter/&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Happy tree-sittering!&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Clear the Eshell</title>
      <link>https://olddeuteronomy.github.io/post/how-to-clear-the-eshell/</link>
      <pubDate>Wed, 05 Oct 2022 13:07:45 +0300</pubDate>
      <guid>https://olddeuteronomy.github.io/post/how-to-clear-the-eshell/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a big fan of Eshell, but some things in Eshell look, hmm,&#xA;a bit strange. One of such things is how the Eshell&amp;rsquo;s command &lt;code&gt;clear&lt;/code&gt; clears&#xA;the screen.&lt;/p&gt;&#xA;&lt;p&gt;As it is decribed at the Unix Wiki page, &lt;em&gt;&lt;code&gt;clear&lt;/code&gt; is a computer operating&#xA;system command which is used to bring the command line on top of the&#xA;computer terminal.&lt;/em&gt; The key words are &amp;ldquo;bring the command line &lt;strong&gt;on top&lt;/strong&gt;&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;The Eshell&amp;rsquo;s &lt;code&gt;clear&lt;/code&gt; works in a different way, it brings the command&#xA;prompt &lt;strong&gt;on bottom&lt;/strong&gt;, instead.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/eshell-clear-1.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;Using the `clear` command to clear the Eshell screen.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/eshell-clear-2.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;After the `clear`, the command prompt has been moved on bottom.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Just recently, I&amp;rsquo;ve accidently discovered an unexpected, at least for me, workaround&#xA;(from this Stackexchange&#xA;&lt;a href=&#34;https://emacs.stackexchange.com/questions/12503/how-to-clear-the-eshell&#34;&gt;thread&lt;/a&gt;).&#xA;To clear the Eshell screen you just need to type &lt;code&gt;clear 1&lt;/code&gt; instead of&#xA;just &lt;code&gt;clear&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/eshell-clear1-1.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;Using the `clear 1` command to clear the Eshell screen.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/eshell-clear1-2.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;After the `clear 1`, it&amp;#39;s OK now.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Of course, then I&amp;rsquo;ve immediately added an alias for &lt;code&gt;clear 1&lt;/code&gt; to my&#xA;Eshell aliases configuration file &lt;code&gt;~/.emacs.d/eshell/alias&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;alias cls clear 1&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;More on Eshell aliases you can find&#xA;in my post &lt;a href=&#34;https://olddeuteronomy.github.io/post/eshell-aliases-and-prompt/&#34;&gt;Eshell Aliases, Prompt, And Colors&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Perhaps you can use this trick for your eshelling.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Emacs Keyboard Shortcuts</title>
      <link>https://olddeuteronomy.github.io/post/emacs-shortcuts/</link>
      <pubDate>Tue, 06 Sep 2022 15:26:36 +0300</pubDate>
      <guid>https://olddeuteronomy.github.io/post/emacs-shortcuts/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://irreal.org/blog/&#34;&gt;Irreal&lt;/a&gt; has recently published &lt;a href=&#34;https://irreal.org/blog/?p=10784&#34;&gt;a&#xA;post&lt;/a&gt; with a reference to the Vernon&#xA;Grant&amp;rsquo;s&#xA;&lt;a href=&#34;https://github.com/VernonGrant/emacs-keyboard-shortcuts&#34;&gt;emacs-keyboard-shortcuts&lt;/a&gt;&#xA;README that contains a list of Emacs keyboard shortcuts Vernon uses on&#xA;a regular basis.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s worth to bookmark it or to download the markdown README locally even&#xA;if you think you know Emacs very well (there is no such people,&#xA;though).&lt;/p&gt;&#xA;&lt;p&gt;Many thanks to both Irreal and Vernon.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reverso Context in Emacs</title>
      <link>https://olddeuteronomy.github.io/post/reverso-context-in-emacs/</link>
      <pubDate>Sat, 03 Sep 2022 01:46:36 +0300</pubDate>
      <guid>https://olddeuteronomy.github.io/post/reverso-context-in-emacs/</guid>
      <description>&lt;p&gt;If you are an emacser, you are probably already following the &lt;a href=&#34;https://sachachua.com/blog/&#34;&gt;Sacha&#xA;Chua&amp;rsquo;s blog&lt;/a&gt;. If you are not, you should.&#xA;Sacha maintains an incredible blog on Emacs-related news, upcoming&#xA;events, Org Mode, configuration, new packages, and many other things&#xA;from the Emacs world.&lt;/p&gt;&#xA;&lt;p&gt;English is not my native language so I need &lt;em&gt;the right tools&lt;/em&gt; to&#xA;improve my language skills. My favorite tool is the&#xA;&lt;a href=&#34;https://www.reverso.net/text-translation&#34;&gt;Reverso&lt;/a&gt; web service, an&#xA;AI-powered service for translation, grammar check, context, and&#xA;synonyms search.&lt;/p&gt;&#xA;&lt;p&gt;Of course, I&amp;rsquo;d prefer to use it in Emacs directly, and in&#xA;&lt;a href=&#34;https://sachachua.com/blog/2022/08/2022-08-29-emacs-news/&#34;&gt;one&lt;/a&gt; of&#xA;the latest Sacha&amp;rsquo;s posts I found what I had been searching for -&#xA;&lt;a href=&#34;https://github.com/SqrtMinusOne/reverso.el&#34;&gt;reverso.el&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;At the time of writing, the package isn’t yet available anywhere but&#xA;in the author&amp;rsquo;s GitHub repository, so as a first step you need either&#xA;to download or to clone this package to your box.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve cloned it to my &lt;code&gt;~/emacs.d/extras/&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/SqrtMinusOne/reverso.el.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Secondly, you need to add this directory to your &lt;code&gt;load-path&lt;/code&gt; and&#xA;&lt;code&gt;require&lt;/code&gt; the package.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;load-path&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/.emacs.d/extras/reverso.el/&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Almost done.&lt;/p&gt;&#xA;&lt;p&gt;Because I&amp;rsquo;m using Reverso quite often, I decided to implement a&#xA;&lt;em&gt;smart&lt;/em&gt; start-up function and to bind it to a &lt;em&gt;common&lt;/em&gt; key like&#xA;&lt;code&gt;&amp;lt;F9&amp;gt;&lt;/code&gt;. I want to distinguish between the &lt;em&gt;Translation&lt;/em&gt; (applied to a&#xA;single word) and the &lt;em&gt;Context&lt;/em&gt; (applied to a phrase or a sentence)&#xA;features of Reverso. So now if you press &lt;code&gt;&amp;lt;F9&amp;gt;&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; there is some&#xA;region selected (active, in terminology of Emacs), &lt;code&gt;reverso-context&lt;/code&gt;&#xA;is called, else, if no region selected, &lt;code&gt;reverso-translate&lt;/code&gt; is&#xA;called for a word under the cursor.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; Reverso context&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; https://github.com/SqrtMinusOne/reverso.el&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reverso&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(defun avs/reverso ()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Calls &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`reverso&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; functions depending on selection.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;If a region (selection) is active, calls &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`reverso-context&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;otherwise calls &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`reverso-translate&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; for a word under the cursor.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (interactive)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (if (region-active-p)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;;; Region is active, use context.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (reverso-context)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;;; Region is not active, get word coordinates...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (let ((bounds (bounds-of-thing-at-point &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;word&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (p (&lt;span style=&#34;color:#a6e22e&#34;&gt;point&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (if bounds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (progn&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;;; ...select the word under cursor...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (&lt;span style=&#34;color:#a6e22e&#34;&gt;goto-char&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;car&lt;/span&gt; bounds))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (set-mark-command &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (&lt;span style=&#34;color:#a6e22e&#34;&gt;goto-char&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;cdr&lt;/span&gt; bounds))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;;; ...and translate it.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (reverso-translate)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;;; Then back to the initial position.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (deactivate-mark)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (&lt;span style=&#34;color:#a6e22e&#34;&gt;goto-char&lt;/span&gt; p)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No word under cursor!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(global-set-key [(f9)] &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;avs/reverso)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/reverso-translate.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;The word &amp;#39;deposed&amp;#39; is under the cursor, no region is active, &amp;lt;F9&amp;gt; calls `reverso-translate&amp;#39;.&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/reverso-context.png&#34;/&gt;&lt;figcaption&gt;&#xA;            &lt;h4&gt;The region &amp;#39;different kind of weather&amp;#39; is active, &amp;lt;F9&amp;gt; calls `reverso-context&amp;#39;&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Many thanks to &lt;a href=&#34;https://github.com/SqrtMinusOne&#34;&gt;Pavel Korytov&lt;/a&gt; for&#xA;the excellent packages, and, indeed, to &lt;a href=&#34;https://sachachua.com/blog/contact/&#34;&gt;Sacha&#xA;Chua&lt;/a&gt; for pointing it out to all of us.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using abbrev to Enter Special Characters</title>
      <link>https://olddeuteronomy.github.io/post/use-abbrev-to-enter-special-characters/</link>
      <pubDate>Tue, 16 Aug 2022 15:08:36 +0300</pubDate>
      <guid>https://olddeuteronomy.github.io/post/use-abbrev-to-enter-special-characters/</guid>
      <description>&lt;p&gt;As it&amp;rsquo;s described in the GNU Emacs Manual, &lt;em&gt;an abbreviation or abbrev&#xA;is a string of characters that may be expanded to a longer string. The&#xA;user can insert the abbrev string and find it replaced automatically&#xA;with the expansion of the abbrev. This saves typing&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Mostly I use builtin &lt;strong&gt;abbrev&lt;/strong&gt; package to enter the special&#xA;characters like greek letters, arrow symbols etc.&lt;/p&gt;&#xA;&lt;p&gt;Below is my setup of &lt;strong&gt;abbrev&lt;/strong&gt; from my &lt;code&gt;~/.emacs&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(setq abbrev-file-name                &lt;span style=&#34;color:#75715e&#34;&gt;;; Tell Emacs where to read abbrev&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/.emacs.d/abbrev_defs.el&amp;#34;&lt;/span&gt;)    &lt;span style=&#34;color:#75715e&#34;&gt;;; Definitions from...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(setq save-abbrevs &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)                 &lt;span style=&#34;color:#75715e&#34;&gt;;; (ask) save abbrevs when files are saved&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(setq-default abbrev-mode &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)          &lt;span style=&#34;color:#75715e&#34;&gt;;; Turn it on globally&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(if (&lt;span style=&#34;color:#a6e22e&#34;&gt;file-exists-p&lt;/span&gt; abbrev-file-name) (quietly-read-abbrev-file))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is my abbrev definition file &lt;code&gt;~/.emacs.d/abbrev_defs.el&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; Time-stamp: &amp;lt;Last changed 2022-08-16 16:38:50 by magnolia&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(define-abbrev-table &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;global-abbrev-table&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8alpha&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;α&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8beta&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;β&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8gamma&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;γ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8Delta&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Δ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8delta&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;δ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8theta&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;θ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8ksi&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ξ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8lambda&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;λ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8mu&amp;#34;&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;µ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8nu&amp;#34;&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ν&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8pi&amp;#34;&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;π&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8Sigma&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Σ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8sigma&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;σ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8tau&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;τ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8phi&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;φ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8psi&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ψ&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8Omega&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ω&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8omega&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ω&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8in&amp;#34;&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;∈&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8nin&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;∉&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8almost&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;≈&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8inf&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;∞&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8deg&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;°&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8cels&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;℃&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8right&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;→&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8left&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;←&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8up&amp;#34;&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;↑&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8down&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;↓&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8para&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;§&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8copy&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;©&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8reg&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;®&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8tm&amp;#34;&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;™&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8eur&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;€&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8pound&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;£&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8plusmin&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;±&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8sup1&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;¹&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8sup2&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;²&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8sup3&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;³&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8ldquo&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;«&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8rdquo&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;»&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8range&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;÷&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8not&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;¬&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8mdot&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;·&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8bull&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;∙&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8accent&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;´&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8mdash&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;—&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8ndash&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;–&amp;#34;&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Just after you type an abbreviation following by either SPC or any&#xA;punctuation symbol it is replaced by the corresponding character.&lt;/p&gt;&#xA;&lt;p&gt;Of course, I&amp;rsquo;ve compiled this setup from various sources, mostly from&#xA;the &lt;a href=&#34;https://impaktor.gitlab.io/dot_emacs.html#org87d6718&#34;&gt;Impaktor&amp;rsquo;s article&lt;/a&gt;&#xA;with some additions.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s also worth to read the &lt;a href=&#34;http://xahlee.info/emacs/emacs/emacs_abbrev_mode_tutorial.html&#34;&gt;Xah Lee&amp;rsquo;s article&lt;/a&gt;&#xA;for more examples of how to use &lt;strong&gt;abbrev&lt;/strong&gt; mode in your daily Emacs&#xA;life.&lt;/p&gt;&#xA;&lt;p&gt;Happy abbreving.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Eshell Aliases, Prompt, And Colors</title>
      <link>https://olddeuteronomy.github.io/post/eshell-aliases-and-prompt/</link>
      <pubDate>Fri, 22 Jul 2022 13:57:32 +0300</pubDate>
      <guid>https://olddeuteronomy.github.io/post/eshell-aliases-and-prompt/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Do you use #Emacs to run shells or terminal emulators?&#xA;Well, you should. With vterm you have a fast alternative to the&#xA;builtin ansi-term. And if you prefer shells, you&amp;rsquo;ve got EShell and&#xA;Shell Mode.&#xA;And don&amp;rsquo;t forget serial-term for embedded programming.&#xA;— Mickey Petersen (@mickeynp) on Twitter, July 18, 2022.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;eshell-aliases&#34;&gt;Eshell Aliases&lt;/h2&gt;&#xA;&lt;p&gt;An excellent&#xA;&lt;a href=&#34;https://www.masteringemacs.org/article/running-shells-in-emacs-overview&#34;&gt;post&lt;/a&gt;&#xA;from Mickey Petersen, a famous Emacs guru and the author of&#xA;&lt;a href=&#34;https://www.masteringemacs.org/&#34;&gt;&lt;em&gt;Mastering Emacs&lt;/em&gt;&lt;/a&gt; reminded me to&#xA;share my eshell configuration.&lt;/p&gt;&#xA;&lt;p&gt;There are 2 ways to configure eshell aliases. &lt;a href=&#34;http://www.gonsie.com/blorg/eshell.html&#34;&gt;Elsa&#xA;Gonsiorowski&lt;/a&gt; uses a&#xA;special configuration file &lt;code&gt;~/.emacs.d/eshell/alias&lt;/code&gt; while &lt;a href=&#34;https://github.com/howardabrams/dot-files/blob/master/emacs-eshell.org#aliases&#34;&gt;Howard&#xA;Abrams&lt;/a&gt;&#xA;prefers to put his eshell alias settings to &lt;code&gt;.emacs&lt;/code&gt; or &lt;code&gt;init.el&lt;/code&gt;.&#xA;Personally, I prefer the former approach.&lt;/p&gt;&#xA;&lt;p&gt;Here is my &lt;code&gt;~/.emacs.d/eshell/alias&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;alias ll ls -AFGhl --color=always $1&#xA;alias ff find-file $1&#xA;alias e find-file-other-window $1&#xA;alias d dired $1&#xA;alias gd magit-diff-unstaged&#xA;alias gds magit-diff-staged&#xA;alias gg git log --color --graph --oneline --abbrev-commit --decorate --all --date=short --pretty=format:&amp;#34;%C(cyan)%h %C(yellow)%ad %C(bold green)%d %C(reset)%s&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Most of these aliases are obvious, e.g. &lt;code&gt;ll&lt;/code&gt; prints extended directory&#xA;listing, &lt;code&gt;ff somefile&lt;/code&gt; opens &lt;em&gt;somefile&lt;/em&gt; for editing in the same&#xA;window, &lt;code&gt;e somefile&lt;/code&gt; uses other window to edit &lt;em&gt;somefile&lt;/em&gt;, &lt;code&gt;d&lt;/code&gt; opens&#xA;the dired buffer in the same window, etc. The last one prints&#xA;the colorized one-line git log as shown below.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://olddeuteronomy.github.io/img/gg2.png&#34;/&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;eshell-prompt&#34;&gt;Eshell Prompt&lt;/h2&gt;&#xA;&lt;p&gt;The prompt you can see on the screenshot above is borrowed from the&#xA;Reddit&#xA;&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/6f0rkz/my_fancy_eshell_prompt/&#34;&gt;post&lt;/a&gt;&#xA;with some colors optimized for the Solarized Dark theme.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(setq eshell-prompt-function&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (lambda ()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;┌─[&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;user-login-name&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#dc322f&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;system-name&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#268bd2&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]──[&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;format-time-string&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%H:%M&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;current-time&lt;/span&gt;)) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#b58900&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]──[&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt; (eshell/pwd)) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#93a1a1&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;└─&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (if venv-current-name (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (&amp;#34;&lt;/span&gt; venv-current-name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;)  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#00dc00&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#a6e22e&#34;&gt;propertize&lt;/span&gt; (if (&lt;span style=&#34;color:#a6e22e&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;user-uid&lt;/span&gt;) &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; # &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; $ &amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#2aa198&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         )))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In addition to the username, the current time, and the current&#xA;directory it also shows the current Python virtual environment name&#xA;(in green).&lt;/p&gt;&#xA;&lt;h2 id=&#34;eshell-colors&#34;&gt;Eshell Colors&lt;/h2&gt;&#xA;&lt;p&gt;The often cited issue with eshell is the lack of color output even if&#xA;it is explicitly specified in a command (e.g. &lt;code&gt;ls --color=always&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Adding this to your &lt;code&gt;~/.emacs&lt;/code&gt; (or &lt;code&gt;init.el&lt;/code&gt;)  DOES NOT solve the problem:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(setenv &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TERM&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xterm-256color&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;THIS DOES solve the problem with color output in eshell:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eshell-mode-hook&lt;/span&gt; (lambda () (setenv &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TERM&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xterm-256color&amp;#34;&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Though to get the current directory listing in eshell I prefer to use the eshell&#xA;alias &lt;code&gt;d&lt;/code&gt; (equivalent to &lt;code&gt;d .&lt;/code&gt;), see the list of aliases above.&lt;/p&gt;&#xA;&lt;p&gt;More on Emacs&amp;rsquo; eshell can be found&#xA;&lt;a href=&#34;https://www.masteringemacs.org/article/complete-guide-mastering-eshell&#34;&gt;here&lt;/a&gt;,&#xA;thanks again, Mickey.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DMS To Decimal Degree Conversions And More</title>
      <link>https://olddeuteronomy.github.io/post/dms-decimal-degree-conversions/</link>
      <pubDate>Wed, 22 Jun 2022 14:11:33 +0300</pubDate>
      <guid>https://olddeuteronomy.github.io/post/dms-decimal-degree-conversions/</guid>
      <description>&lt;p&gt;Working with satellite data I often have to convert a coordinate value or an&#xA;angle value from the DMS notation (&lt;em&gt;degree@minute&amp;rsquo;second&amp;quot;&lt;/em&gt;) to a decimal&#xA;degree in the floating point number format and vice versa.&lt;/p&gt;&#xA;&lt;h2 id=&#34;dms-to-decimal-degree&#34;&gt;DMS to Decimal Degree&lt;/h2&gt;&#xA;&lt;p&gt;Of course, I want to do this directly in an Emacs buffer, so I wrote a&#xA;simple function that uses &lt;code&gt;deg&lt;/code&gt; and &lt;code&gt;hms&lt;/code&gt; functions provided by the&#xA;built-in superb &lt;strong&gt;calc&lt;/strong&gt; package.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(defun dms2deg (p1 p2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Converts a region from the DMS (dd@mm&amp;#39;ss\&amp;#34;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  to a decimal degree.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  P1,P2 are the beginning and the end of the region&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  (selection) respectively.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (interactive &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (let (s)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (if (region-active-p)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (progn&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (setq s (calc-eval&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deg(&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;buffer-substring-no-properties&lt;/span&gt; p1 p2) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (delete-active-region)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt; s))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No active region!&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve bound this function to the &lt;code&gt;Ctrl+F6&lt;/code&gt; key chord (&lt;code&gt;C-f6&lt;/code&gt; in the Emacs&#xA;notation) globally. Of course, you can use your own key combination.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(global-set-key [(control f6)] &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;dms2deg)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now I can select a region in a buffer, press &lt;code&gt;C-f6&lt;/code&gt; and &lt;em&gt;replace&lt;/em&gt; the&#xA;selection with its decimal value, so &lt;code&gt;30@15&#39;54&amp;quot;&lt;/code&gt; becomes &lt;code&gt;30.265&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;decimal-degree-to-dms&#34;&gt;Decimal Degree to DMS&lt;/h2&gt;&#xA;&lt;p&gt;The inverse function (bound to &lt;code&gt;S-f6&lt;/code&gt; or &lt;code&gt;Shift+F6&lt;/code&gt;) &lt;em&gt;replaces&lt;/em&gt; a floating&#xA;point with the corresponding DMS string.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(defun deg2dms (p1 p2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Converts a region from a decimal degree&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  to the DMS format (dd@ mm&amp;#39; ss\&amp;#34;).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  P1,P2 - beginning and end of the region&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  (selection) respectively.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (interactive &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (let (s)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (if (region-active-p)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (progn&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (setq s (calc-eval&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hms(&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;buffer-substring-no-properties&lt;/span&gt; p1 p2) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (delete-active-region)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt; s))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No active region!&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(global-set-key [(shift f6)] &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;deg2dms)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now if you select a region in a buffer and then press &lt;code&gt;S-f6&lt;/code&gt;, your &lt;code&gt;30.265&lt;/code&gt;&#xA;becomes &lt;code&gt;30@ 15&#39; 54.&amp;quot;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;enhanced-version&#34;&gt;Enhanced Version&lt;/h2&gt;&#xA;&lt;p&gt;After a while, I decided to enhance the first conversion function by&#xA;adding an &lt;em&gt;&amp;lsquo;inline calculator&amp;rsquo;&lt;/em&gt; feature. It works quite simple: if a&#xA;selected region contains the &amp;lsquo;@&amp;rsquo; character, the region is considered&#xA;as a coordinate (angle) value in the DMS notation, and it should be &lt;em&gt;replaced&lt;/em&gt;&#xA;with its decimal value. Otherwise, the region is considered as an&#xA;arithmetic expression (in terms of the Emacs&amp;rsquo; calc) and its calculated&#xA;value will be &lt;em&gt;inserted&lt;/em&gt; just after the region.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(defun avs/calc-region (p1 p2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Calculates a region or converts DMS to decimal.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   P1,P2 - beginning and end of the region&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   respectively.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (interactive &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (if (region-active-p)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (let ((b (&lt;span style=&#34;color:#a6e22e&#34;&gt;buffer-substring-no-properties&lt;/span&gt; p1 p2)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (cond ((string-match-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt; b) &lt;span style=&#34;color:#75715e&#34;&gt;; convert DMS to decimal ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (delete-active-region)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt; (calc-eval (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deg(&amp;#34;&lt;/span&gt; b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              (&lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;; ... otherwise calculate a region&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (&lt;span style=&#34;color:#a6e22e&#34;&gt;goto-char&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;region-end&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (pop-mark)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; = &amp;#34;&lt;/span&gt; (calc-eval b))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No active region!&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(global-set-key [(f6)] &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avs/calc-region&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The enhanced function is bound to &lt;code&gt;f6&lt;/code&gt;. So now if you press &lt;code&gt;F6&lt;/code&gt;,&#xA;&lt;code&gt;15@45&#39;20&amp;quot;&lt;/code&gt; becomes &lt;code&gt;15.7555555556&lt;/code&gt;, and &lt;code&gt;((350.0 / 7) + 48.314)&lt;/code&gt;&#xA;becomes &lt;code&gt;((350.0 / 7) + 48.314) = 98.314&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&lt;p&gt;Emacs&amp;rsquo; &lt;strong&gt;calc&lt;/strong&gt; is great.&lt;/p&gt;&#xA;&lt;h2 id=&#34;next&#34;&gt;Next&lt;/h2&gt;&#xA;&lt;p&gt;As a next step, I want to implement DMS and Decimal degree&#xA;conversions to the DD:MM:SS format used by the excellent &lt;a href=&#34;https://www.generic-mapping-tools.org/&#34;&gt;Generic&#xA;Mapping Tools&lt;/a&gt; (GMT) toolbox.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I Am Back</title>
      <link>https://olddeuteronomy.github.io/post/i-am-back/</link>
      <pubDate>Tue, 21 Jun 2022 02:45:58 +0300</pubDate>
      <guid>https://olddeuteronomy.github.io/post/i-am-back/</guid>
      <description>&lt;p&gt;I started this blog in 2017. After a long break, I decided to continue&#xA;blogging about various things related to Emacs. And not just to Emacs.&lt;/p&gt;&#xA;&lt;p&gt;Also, I&amp;rsquo;ve switched from Jekyll to Hugo for a variety of reasons, mainly&#xA;because of the Mainroad theme.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
